---
name: Build images

on:
  push:
    branches:
      - master
  pull_request: 
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: changes
        with:
          filters: |
            all-images:
              - Dockerfile
              - Makefile
              - tools/**
              - .github/workflows/build-images.yaml
            main-server-image:
              - server config/main/**

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
        if: &any_images_need_built >-
          steps.changes.outputs.all-images == 'true' ||
          steps.changes.outputs.main-server-image == 'true'

      - name: Determine image version
        run: |
          if [ "${GITHUB_EVENT_NAME}" = "pull_request" ]; then
            # Set version as pr-<PR_NUMBER> for pull requests
            echo "VERSION=pr-${GITHUB_REF#refs/pull/}" >> "${GITHUB_ENV}"
          else
            # Set version as a timestamp for pushes to master/main branch, and workflows dispatch events
            echo "VERSION=$(date +'%Y%m%d%H%M%S')" >> "${GITHUB_ENV}"
          fi
        if: *any_images_need_built
          
      - name: Determine if image should be pushed
        run: |
          if [ "${GITHUB_EVENT_NAME}" = "push" ]; then
            echo "PUSH_ALL=true" >> "${GITHUB_ENV}"
          else
            echo "PUSH_ALL=false" >> "${GITHUB_ENV}"
          fi
        if: *any_images_need_built

      - name: Expose GitHub token to Docker
        uses: crazy-max/ghaction-github-runtime@3cb05d89e1f492524af3d41a1c98c83bc3025124  # v3.1.0

      - name: Build the base server image
        run: make base-image EXTRA_DOCKER_ARGS="--cache-to type=gha,scope=base-image,mode=max --cache-from type=gha,scope=base-image"
        if: *any_images_need_built

      - name: Build the main server image
        run: make server-image-main VERSION="${VERSION}" PUSH_ALL="${PUSH_ALL}" EXTRA_DOCKER_ARGS="--cache-to type=gha,scope=main-image,mode=max --cache-from type=gha,scope=main-image"
        if: *any_images_need_built
